#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/pointing.h>
#include <mouse.dtsi>

// The default keymap is roughly on Miryoku layout
// (https://github.com/manna-harbour/miryoku).
// Customize on your own on the config folder.

#define BASE    0
#define NUM     1
#define SYM     2
//#define NUM     3
//#define FUN     4
//#define MED     5

#define ZMK_POINTING_DEFAULT_MOVE_VAL 1500  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 20    // default: 10

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
    &kp Q       &kp W       &kp F       &kp P       &kp B                      &kp J           &kp L       &kp U       &kp Y           &kp SEMI
    &hm LGUI A  &hm LALT R  &hm LCTRL S &hm LSHFT T &kp G                      &kp M           &hm LSHFT N &hm LCTRL E &hm RALT I      &hm LGUI O
    &kp Z       &kp X       &kp C       &kp D       &kp V                      &kp K           &kp H       &kp COMMA   &kp DOT         &kp FSLH
                                        &lt MED BSPC &lt NAV DEL               &lt NUM SPC     &lt SYM RET
            >;
        };

        num_layer {
            bindings = <
    &kp LBRC    &kp F7      &kp F8      &kp F9     &kp RBRC                     &kp LBKT  &kp N7      &kp N8      &kp N9     &kp RBKT
    &kp COLON   &kp F4      &kp F5      &kp F6     &kp PLUS                     &kp EQUAL &kp N4      &kp N5      &kp N6     &kp SEMI
    &kp TILDE   &kp F1      &kp F2      &kp F3     &kp SHIFT                    &kp BLSH  &kp N1      &kp N2      &kp N3     &kp TILDE
                                        &kp LPAR   &kp RPAR                     &trans    &kp N0
            >;
        };

        sym_layer {
            bindings = <
    &kp ESC     &kp LBKT    &kp RBKT    &kp LBRC   &kp RBRC                     &kp TILDE &kp AMPS   &kp ASTRK &kp EQUAL &kp PLUS
    &kp COLON   &kp LCTRL   &kp LALT    &kp SHIFT  &kp PLUS                     &kp GRAVE &kp DLLR   &kp PRCNT &kp CARET &kp SEMI
    &kp TILDE   &kp MINUS   &kp UNDER   &kp F3     &kp SQT                      &kp DQT   &kp EXCL   &kp AT    &kp HASH  &kp BSLH
                                        &kp LPAR   &kp RPAR                     &none     &trans
            >;
        };

        nav_layer {
            bindings = <
    &kp PSCRN   &kp HOME    &kp UP      &kp END    &kp RBRC             &kp F12   &msc SCRL_UP   &mmv MOVE_UP   &msc SCRL_DOWN  &kp C_MUTE
    &kp PG_UP   &kp LEFT    &kp DOWN    &kp RIGHT  &kp PG_UP            &kp PG_DN &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_RIGHT &kp C_VOL_UP
    &kp PG_DN   &kp N1      &kp CTRL    &kp SHIFT  &kp HOME             &kp END   &kp C_PREV     &kp C_PAUSE    &kp C_NEXT      &kp C_VOL_DN
                                        &none      &trans               &none     &none
            >;
        };

   /*     fun_layer {
            bindings = <
    &kp F12 &kp F7  &kp F8  &kp F9      &kp PSCRN                           &none   &none       &none       &none       &none
    &kp F11 &kp F4  &kp F5  &kp F6      &kp SLCK                            &none   &kp RSHFT   &kp RCTRL   &kp RALT    &kp RGUI
    &kp F10 &kp F1  &kp F2  &kp F3      &kp PAUSE_BREAK                     &none   &none       &none       &none       &none
                            &kp K_APP   &kp SPACE                           &none   &trans
            >;
        };

        media_layer {
            bindings = <
    &none       &none       &none       &none       &none                           &none       &none         &none         &none           &none
    &kp LGUI    &kp LALT    &kp LCTRL   &kp LSHFT   &none                           &none       &kp C_PREV    &kp C_VOL_DN  &kp C_VOL_UP    &kp C_NEXT
    &none       &none       &none       &none       &none                           &kp C_STOP  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2    &bt BT_SEL 3     
                                        &trans      &none                           &kp C_PP    &kp C_MUTE     
            >;
        }; */
    };
};
